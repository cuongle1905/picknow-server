@*@model (int storeGroup, int storeProductGroup)*@
@model List<GetNowServer.Models.StoreProductView>
@{
    var count = Model.Count;
    var columns = 4;
    var rows = count / columns;
    if (count % columns > 0)
        rows++;
}
@*<p class="h4">Hello <strong>world</strong></p>*@
<div class="d-flex">
    <div class="ml-auto">
        <div id="add-product-button"></div>
    </div>
</div>
<div id="products-content">
    <div class="container">
        @for (int row = 0; row < rows; row++)
        {
            <div class="row">
                @for (int column = 0; column < columns; column++)
                {
                    int i = row * columns + column;
                    if (i >= count)
                        break;

                    var item = Model[i];
                    <div class="col-3 item_product_main pb-2">
                        <div><a id="itemImgLink@(item.Id)" name="itemImgLink@(item.Id)" title="Click to change image" onclick="showChangeIconPopover(@(item.Id))"><img id="itemImg@(item.Id)" class="image_thumb" src="~/data_images/@(item.ImageFile??"photo.png")" /></a></div>
                        <div class="small">@(item.Name)</div>
                        <div class="small"><strong>@(Convert.ToDecimal(item.Price).ToString("n0"))đ</strong></div>
                    </div>
                }
            </div>
        }
    </div>
</div>
<div id="changeIconPopoverContainer">
    <div id="changeIconFileUploader"></div>
    <div id="removeIconButton"></div>
</div>
<script>
    var productForm;
    var searchName;
    var timerId;
    $(function () {
        $("#add-product-button").dxButton({
            icon: "add",
            type: "default",
            stylingMode: "contained",
            text: "Add Product",
            onClick: function (e) {
                addProduct();
            }
        });
        createDxFileUploader('@Url.Action("ProductImage", "Upload")');
    });

    function addProduct() {
        //var product = @Html.Raw(Json.Serialize(@Model[0]));
        $("#popupDiv").dxPopup({
            visible: true,
            title: 'Add Product',
            minwidth: 600,
            minheight: 600,
            width: "90%",
            position: {
                my: 'center',
                at: 'center',
                of: window
            },
            dragEnabled: true,
            contentTemplate: function (e) {
                var popupContent = $("<div id='popup-content' class='container'></div>")
                var row = $("<div class='row'></div>")
                popupContent.append(row)
                var leftCol = $("<div class='col-8'></div>")
                row.append(leftCol)
                var rightCol = $("<div id='divSearchProduct' class='col-4'>Hellow world</div>")
                row.append(rightCol)

                var formContainer = $("<div id='subForm'></div>");
                productForm = formContainer.dxForm({
                    //formData: product,
                    readOnly: false,
                    showColonAfterLabel: false,
                    labelLocation: "left",
                    //minColWidth: 300,
                    showValidationSummary: true,
                    items: [
                        {
                            itemType: "group",
                            //caption: "Product Information",
                            colCount: 2,
                            items: [
                                {
                                    dataField: "Name",
                                    label: { text: "Name" },
                                    editorOptions: {
                                        valueChangeEvent: "input",
                                        onValueChanged: function (data) {
                                            console.log("Name changed: " + data.value);
                                            if (data.value.length < 3)
                                                return;

                                            searchName = data.value;
                                            clearTimeout(timerId)
                                            timerId = setTimeout(function () {
                                                if (searchName == data.value) {
                                                    console.log("Search name: " + searchName)
                                                    $.ajax({
                                                        url: '@Url.Action("Get", "ProductViews")',
                                                        method: "GET",
                                                        dataType: "json",
                                                        data: { name: searchName },
                                                        success: function (result) {
                                                            console.log(result);
                                                            displayProductSearchResult(result);
                                                            //$("#divSearchProduct").html(result);
                                                        }
                                                    });
                                                }
                                            }, 500);
                                        }
                                    },
                                    validationRules: [{
                                        type: "required",
                                        message: "Product Name is required"
                                    }]
                                },
                                {
                                    itemType: "empty"
                                    //dataField: "StoreProductGroup",
                                    //label: { text: "Group" },
                                    //editorType: "dxLookup",
                                    //editorOptions: {}
                                }
                            ]
                        }, {
                            itemType: "button",
                            horizontalAlignment: "left",
                            colSpan: 2,
                            buttonOptions: {
                                icon: "save",
                                text: "Save",
                                type: "default",
                                stylingMode: "contained",
                                useSubmitBehavior: true,
                                onClick: function () {
                                    mainForm.getEditor("mainFormSubmit").option("useSubmitBehavior", false);
                                    $("#popupForm").submit();
                                }
                            },
                        }
                    ]
                }).dxForm("instance");

                leftCol.append(formContainer)
                e.append(popupContent)

                $("#popupForm").on("submit", function (e) {
                    alert('#popupForm submit pressed');
                });
            }
        });
    }

    function displayProductSearchResult(products) {
        var output = "<div class='container'>";
        products.forEach(function (product) {
            var name = product["Name"];
            var imageFile = product["ImageFile"];
            if (imageFile == undefined)
                imageFile = "photo.png";

            output = output + "<div class='row align-items-center'><div class='col-3 pl-0 pr-0'><img class='image_thumb' src='/data_images/" + imageFile + "'/></div>";
            output = output + "<div class='col-9 pl-1 pr-0'>" + name + "</div></div>";
        });
        output = output + "</div>";
        $("#divSearchProduct").html(output);
    }
</script>
