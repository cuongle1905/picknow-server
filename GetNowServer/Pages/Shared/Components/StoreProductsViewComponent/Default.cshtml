@model (int storeGroup, int storeProductGroup)
@*@model List<GetNowServer.Models.StoreProductView>
    @{
        var count = Model.Count;
        var columns = 3;
        var rows = count / columns;
        if (count % columns > 0)
            rows++;
    }*@
<p class="h4">Hello <strong>world</strong></p>
@*<div id="products-content">
        <div class="container">
            @for (int row = 0; row < rows; row++)
            {
                <div class="row">
                    @for (int column = 0; column < columns; column++)
                    {
                        int i = row * columns + column;
                        if (i >= count)
                            break;

                        var item = Model[i];
                        <div class="col-4">
                            @(item.Name)
                        </div>
                    }
                </div>
            }
        </div>
    </div>*@



@*<script>
        $(function () {
            var storeGroup = '@Model.storeGroup'
            var storeProductGroup = '@Model.storeProductGroup'
            alert(storeProductGroup)
            $.ajax({
                type: "GET",
                url: "@Url.Action("Get", "StoreProductViews")",
                data: { storeGroup: storeGroup, storeProductGroup: storeProductGroup },
                success: function (result) {
                    //do something with result here
                    alert(result.length);
                }
            });
        });
        function displayProducts(products) {

        }
    </script>*@

@(Html.DevExtreme().DataGrid<GetNowServer.Models.NColumn>()
        .DataSource(ds => ds.Mvc()
            .Controller("StoreProductViews")
            .LoadAction("GetNColumns")
            .LoadParams(new { columns = 4, storeGroup = Model.storeGroup, storeProductGroup = Model.storeProductGroup })
            .Key("Id")
        )
        .RemoteOperations(false)
        .ShowColumnHeaders(false)
        .Columns(columns => {

            columns.AddFor(m => m.Col1)
                .CellTemplate(@<text>
                    @(await Html.PartialAsync("_ProductCellTemplate"))
                </text>);

            columns.AddFor(m => m.Col2)
                .CellTemplate(@<text>
                    @(await Html.PartialAsync("_ProductCellTemplate"))
                </text>);

            columns.AddFor(m => m.Col3)
                .CellTemplate(@<text>
                    @(await Html.PartialAsync("_ProductCellTemplate"))
                </text>);

            columns.AddFor(m => m.Col4)
                .CellTemplate(@<text>
                    @(await Html.PartialAsync("_ProductCellTemplate"))
                </text>);
        })
    )
